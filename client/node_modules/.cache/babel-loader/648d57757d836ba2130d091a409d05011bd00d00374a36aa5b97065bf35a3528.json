{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  open: true\n};\nconst openSidebarSlice = createSlice({\n  name: 'OpenSidebar',\n  initialState,\n  reducers: {\n    openSidebar: state => {\n      state.open = true;\n    },\n    closeSidebar: state => {\n      state.open = false;\n    }\n  }\n});\nexport const {\n  openSidebar,\n  closeSidebar\n} = openSidebarSlice.actions;\nexport default openSidebarSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","open","openSidebarSlice","name","reducers","openSidebar","state","closeSidebar","actions","reducer"],"sources":["/Users/koshirok/Documents/Github/todo-app/client/src/redux/openSidebarSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface OpenSidebarState {\n    open: boolean;\n}\n\nconst initialState: OpenSidebarState = {\n    open: true\n}\n\nconst openSidebarSlice = createSlice ({\n    name: 'OpenSidebar',\n    initialState,\n    reducers: {\n        openSidebar: (state) => {\n            state.open = true;\n        },\n        \n        closeSidebar:  (state) => {\n            state.open = false;\n        }\n                \n    }    \n});\n\nexport const { openSidebar, closeSidebar } = openSidebarSlice.actions;  \n\nexport default openSidebarSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAM7D,MAAMC,YAA8B,GAAG;EACnCC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,gBAAgB,GAAGH,WAAW,CAAE;EAClCI,IAAI,EAAE,aAAa;EACnBH,YAAY;EACZI,QAAQ,EAAE;IACNC,WAAW,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACL,IAAI,GAAG,IAAI;IACrB,CAAC;IAEDM,YAAY,EAAID,KAAK,IAAK;MACtBA,KAAK,CAACL,IAAI,GAAG,KAAK;IACtB;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,WAAW;EAAEE;AAAa,CAAC,GAAGL,gBAAgB,CAACM,OAAO;AAErE,eAAeN,gBAAgB,CAACO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}